{{- $providerConfigName := tpl .Values.providerConfig.name $ | required ".Values.providerConfig.name is required" }}
{{- $realmName := tpl .Values.realm.name $ }}
{{- $realmResourceName := $realmName | printf "%s--realm" }}

{{- range $client := .Values.clients.oidc }}
{{- $clientName := tpl $client.name $ | required "$client.*.name is required" }}
{{- $clientDescription := $client.forProvider.description | required (printf "$client.%s.forProvider.description is required" $client.name) }}
---
apiVersion: openidclient.keycloak.crossplane.io/v1alpha1
kind: Client
metadata:
  name: "{{ $clientName }}"
spec:
  providerConfigRef:
    name: '{{ $realmName }}--keycloak'
  forProvider:
    realmIdRef:
      name: '{{ $realmResourceName }}'
    {{- tpl ($client.forProvider | toYaml) $ | nindent 4 }}

{{- if (and $client.scope.mappers $client.scope.name) }}
{{- $clientScopeResourceName := tpl $client.scope.name $ }}
---
apiVersion: openidclient.keycloak.crossplane.io/v1alpha1
kind: ClientScope
metadata:
  name: "{{ $clientScopeResourceName }}"
spec:
  providerConfigRef:
    name: "{{ $providerConfigName }}"
  forProvider:
    realmIdRef:
      name: "{{ $realmResourceName }}"
    {{- tpl ($client.scope.forProvider | toYaml) $ | nindent 4 }}

{{- range $mapper := $client.scope.mappers }}
---
apiVersion: client.keycloak.crossplane.io/v1alpha1
kind: ProtocolMapper
metadata:
  name: "{{ tpl $mapper.name $ }}"
spec:
  providerConfigRef:
    name: "{{ $providerConfigName }}"
  forProvider:
    realmIdRef:
      name: "{{ $realmResourceName }}"
    clientScopeIdRef:
      name: "{{ $clientScopeResourceName }}"
    protocol: openid-connect
    protocolMapper: oidc-usermodel-attribute-mapper
    {{- tpl ($mapper.forProvider | toYaml) $ | nindent 4 }}
{{- end }}

{{- end }}

{{- if $client.defaultScope }}
---
apiVersion: openidclient.keycloak.crossplane.io/v1alpha1
kind: ClientDefaultScopes
metadata:
  name: "{{ tpl $client.defaultScope.name $ }}"
spec:
  providerConfigRef:
    name: "{{ $providerConfigName }}"
  forProvider:
    realmIdRef:
      name: "{{ $realmResourceName }}"
    clientIdRef:
      name: "{{ $clientName }}"
    {{- tpl ($client.defaultScope.forProvider | toYaml) $ | nindent 4 }}
{{- end }}

{{- end }}
